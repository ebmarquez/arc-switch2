name: Build Multi-Platform Binaries

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v0.0.3-alpha.1)'
        required: true
        default: 'v0.0.3-alpha.1'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            name: linux-amd64
          - goos: linux
            goarch: arm64
            name: linux-arm64
          - goos: darwin
            goarch: amd64
            name: darwin-amd64
          - goos: darwin
            goarch: arm64
            name: darwin-arm64
          - goos: windows
            goarch: amd64
            name: windows-amd64
            ext: .exe
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Build binary
      run: |
        cd src/SwitchOutput/Cisco/Nexus/10/mac_address_parser
        go mod tidy
        CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
          go build -ldflags="-w -s" -o mac_address_parser${{ matrix.ext }} mac_address_parser.go
          
    - name: Create package
      run: |
        cd src/SwitchOutput/Cisco/Nexus/10/mac_address_parser
        mkdir -p $GITHUB_WORKSPACE/release-assets
        if [ "${{ matrix.goos }}" = "windows" ]; then
          zip $GITHUB_WORKSPACE/release-assets/mac_address_parser-${{ github.event.inputs.version }}-${{ matrix.name }}.zip \
            mac_address_parser.exe README.md mac-address-table-sample.json
        else
          tar -czf $GITHUB_WORKSPACE/release-assets/mac_address_parser-${{ github.event.inputs.version }}-${{ matrix.name }}.tar.gz \
            mac_address_parser README.md mac-address-table-sample.json
        fi
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mac_address_parser-${{ matrix.name }}
        path: release-assets/

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Prepare release assets
      run: |
        mkdir -p release-assets
        find artifacts -name "mac_address_parser-*" -type f -exec cp {} release-assets/ \;
        
    - name: Generate checksums
      run: |
        cd release-assets
        for file in mac_address_parser-*; do
          sha256sum "$file" > "$file.sha256"
        done
        
    - name: Get previous tag
      id: prev_tag
      run: |
        PREV_TAG=$(git tag --sort=-version:refname | head -n1)
        echo "prev_tag=${PREV_TAG}" >> $GITHUB_OUTPUT
        
    - name: Create Git Tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "${{ github.event.inputs.version }}" -m "Release ${{ github.event.inputs.version }}"
        git push origin "${{ github.event.inputs.version }}"
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.version }}
        name: Release ${{ github.event.inputs.version }}
        body: |
          # Release Notes - ${{ github.event.inputs.version }}
          
          ## 🚀 Multi-Platform Release: MAC Address Parser
          
          This release includes pre-compiled binaries for multiple platforms.
          
          ### 📦 Available Platforms
          
          - **Linux AMD64** - `mac_address_parser-${{ github.event.inputs.version }}-linux-amd64.tar.gz`
          - **Linux ARM64** - `mac_address_parser-${{ github.event.inputs.version }}-linux-arm64.tar.gz`
          - **macOS AMD64** - `mac_address_parser-${{ github.event.inputs.version }}-darwin-amd64.tar.gz`
          - **macOS ARM64** - `mac_address_parser-${{ github.event.inputs.version }}-darwin-arm64.tar.gz`
          - **Windows AMD64** - `mac_address_parser-${{ github.event.inputs.version }}-windows-amd64.zip`
          
          ### 🔧 Technical Changes
          
          - Uses `vsh` CLI for Cisco Nexus Linux shell compatibility
          - Optimized binary builds with reduced size
          - Cross-platform compatibility
          
          ### 🔗 Usage
          
          ```bash
          # Extract the archive (Linux/macOS)
          tar -xzf mac_address_parser-${{ github.event.inputs.version }}-linux-amd64.tar.gz
          
          # Run with input file
          ./mac_address_parser -input show-mac-address-table.txt -output output.json
          ```
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.prev_tag.outputs.prev_tag }}...${{ github.event.inputs.version }}
        prerelease: true
        files: |
          release-assets/*
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Print release info
      run: |
        echo "✅ Multi-platform release created successfully!"
        echo "🏷️ Tag: ${{ github.event.inputs.version }}"
        echo "📦 Assets:"
        ls -la release-assets/
        echo "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ github.event.inputs.version }}"
